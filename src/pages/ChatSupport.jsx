import { useState, useEffect } from 'react'
import { toast } from 'react-hot-toast'
import { 
  Send, 
  Phone, 
  Mail, 
  MessageCircle, 
  User, 
  Clock,
  CheckCircle,
  AlertCircle,
  FileText,
  Building,
  HelpCircle
} from 'lucide-react'

const ChatSupport = () => {
  const [messages, setMessages] = useState([])
  const [newMessage, setNewMessage] = useState('')
  const [isTyping, setIsTyping] = useState(false)
  const [selectedTopic, setSelectedTopic] = useState('')

  const topics = [
    {
      id: 'general',
      title: '–ó–∞–≥–∞–ª—å–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è',
      description: '–ó–∞–≥–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—é',
      icon: HelpCircle
    },
    {
      id: 'application',
      title: '–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏',
      description: '–î–æ–ø–æ–º–æ–≥–∞ –∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è–º –∑–∞—è–≤–∫–∏',
      icon: FileText
    },
    {
      id: 'contract',
      title: '–î–æ–≥–æ–≤—ñ—Ä —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó',
      description: '–ü–∏—Ç–∞–Ω–Ω—è —â–æ–¥–æ –¥–æ–≥–æ–≤–æ—Ä—É',
      icon: FileText
    },
    {
      id: 'payment',
      title: '–ü–ª–∞—Ç–µ–∂—ñ',
      description: '–ü–∏—Ç–∞–Ω–Ω—è —â–æ–¥–æ –ø–ª–∞—Ç–µ–∂—ñ–≤',
      icon: Building
    },
    {
      id: 'technical',
      title: '–¢–µ—Ö–Ω—ñ—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞',
      description: '–¢–µ—Ö–Ω—ñ—á–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏ –∑ —Å–∞–π—Ç–æ–º',
      icon: MessageCircle
    }
  ]

  // –ú–æ–∫–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const initialMessages = [
    {
      id: 1,
      text: '–î–æ–±—Ä–æ–≥–æ –¥–Ω—è! –ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?',
      sender: 'support',
      timestamp: new Date(Date.now() - 300000),
      avatar: 'üë®‚Äçüíº'
    },
    {
      id: 2,
      text: '–î–æ–±—Ä–æ–≥–æ –¥–Ω—è! –£ –º–µ–Ω–µ —î –ø–∏—Ç–∞–Ω–Ω—è —â–æ–¥–æ —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó –±–æ—Ä–≥—É.',
      sender: 'user',
      timestamp: new Date(Date.now() - 240000),
      avatar: 'üë§'
    },
    {
      id: 3,
      text: '–ó–≤–∏—á–∞–π–Ω–æ! –Ø –≥–æ—Ç–æ–≤–∏–π –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤–∞–º –∑ –ø–∏—Ç–∞–Ω–Ω—è–º–∏ —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó. –©–æ —Å–∞–º–µ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?',
      sender: 'support',
      timestamp: new Date(Date.now() - 180000),
      avatar: 'üë®‚Äçüíº'
    }
  ]

  useEffect(() => {
    setMessages(initialMessages)
  }, [])

  // –û—Ç–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–æ–ª–ª
  // useEffect(() => {
  //   if (messages.length > initialMessages.length) {
  //     scrollToBottom()
  //   }
  // }, [messages])

  // const scrollToBottom = () => {
  //   // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞
  //   setTimeout(() => {
  //     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })
  //   }, 100)
  // }

  const handleSendMessage = () => {
    if (!newMessage.trim()) return

    const userMessage = {
      id: messages.length + 1,
      text: newMessage,
      sender: 'user',
      timestamp: new Date(),
      avatar: 'üë§'
    }

    setMessages(prev => [...prev, userMessage])
    setNewMessage('')
    setIsTyping(true)

    // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    setTimeout(() => {
      const supportMessage = {
        id: messages.length + 2,
        text: getSupportResponse(newMessage),
        sender: 'support',
        timestamp: new Date(),
        avatar: 'üë®‚Äçüíº'
      }
      setMessages(prev => [...prev, supportMessage])
      setIsTyping(false)
    }, 2000)
  }

  const getSupportResponse = (message) => {
    const lowerMessage = message.toLowerCase()
    
    if (lowerMessage.includes('—Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è') || lowerMessage.includes('—Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è')) {
      return '–†–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è - —Ü–µ –ø—Ä–æ—Ü–µ—Å –∑–º—ñ–Ω–∏ —É–º–æ–≤ –ø–æ–≥–∞—à–µ–Ω–Ω—è –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω–æ—Å—Ç—ñ, —è–∫–∏–π –¥–æ–∑–≤–æ–ª—è—î —Ä–æ–∑–±–∏—Ç–∏ –≤–µ–ª–∏–∫–∏–π –±–æ—Ä–≥ –Ω–∞ –º–µ–Ω—à—ñ —á–∞—Å—Ç–∏–Ω–∏ —Ç–∞ –ø–æ–≥–∞—à–∞—Ç–∏ –π–æ–≥–æ –ø—Ä–æ—Ç—è–≥–æ–º –±—ñ–ª—å—à —Ç—Ä–∏–≤–∞–ª–æ–≥–æ –ø–µ—Ä—ñ–æ–¥—É. –¶–µ –¥–æ–ø–æ–º–∞–≥–∞—î —É–Ω–∏–∫–Ω—É—Ç–∏ —Å—É–¥–æ–≤–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤ —Ç–∞ –∑—Ä–æ–±–∏—Ç–∏ –ø–æ–≥–∞—à–µ–Ω–Ω—è –±–æ—Ä–≥—É –±—ñ–ª—å—à –¥–æ—Å—Ç—É–ø–Ω–∏–º.'
    }
    
    if (lowerMessage.includes('–∑–∞—è–≤–∫–∞') || lowerMessage.includes('–∑–∞—è–≤–∫—É')) {
      return '–î–ª—è –ø–æ–¥–∞—á—ñ –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—é –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ —Ñ–æ—Ä–º—É –Ω–∞ –Ω–∞—à–æ–º—É —Å–∞–π—Ç—ñ. –í–æ–Ω–∞ –≤–∫–ª—é—á–∞—î –≤–∏–±—ñ—Ä –∫–æ–º—É–Ω–∞–ª—å–Ω–æ–≥–æ –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–∞, –æ—Å–æ–±–∏—Å—Ç—ñ –¥–∞–Ω—ñ, —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –±–æ—Ä–≥ —Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ. –ü—ñ—Å–ª—è –ø–æ–¥–∞—á—ñ –∑–∞—è–≤–∫–∏ –º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—Ç–≤–æ—Ä–∏–º–æ –¥–æ–≥–æ–≤—ñ—Ä —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó.'
    }
    
    if (lowerMessage.includes('–¥–æ–≥–æ–≤—ñ—Ä') || lowerMessage.includes('–¥–æ–≥–æ–≤–æ—Ä')) {
      return '–î–æ–≥–æ–≤—ñ—Ä —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó –≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–∏—Ö –¥–∞–Ω–∏—Ö. –í—ñ–Ω –º—ñ—Å—Ç–∏—Ç—å –≤—Å—ñ —É–º–æ–≤–∏ —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó, —Å—É–º—É –±–æ—Ä–≥—É, —â–æ–º—ñ—Å—è—á–Ω–∏–π –ø–ª–∞—Ç—ñ–∂ —Ç–∞ —Ç–µ—Ä–º—ñ–Ω –ø–æ–≥–∞—à–µ–Ω–Ω—è. –î–æ–≥–æ–≤—ñ—Ä –º–æ–∂–Ω–∞ –ø—ñ–¥–ø–∏—Å–∞—Ç–∏ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é BankID –∞–±–æ –î—ñ—è.–ü—ñ–¥–ø–∏—Å.'
    }
    
    if (lowerMessage.includes('–ø–ª–∞—Ç—ñ–∂') || lowerMessage.includes('–ø–ª–∞—Ç–µ–∂') || lowerMessage.includes('–≥—Ä–æ—à—ñ')) {
      return '–©–æ–º—ñ—Å—è—á–Ω–∏–π –ø–ª–∞—Ç—ñ–∂ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è —à–ª—è—Ö–æ–º –¥—ñ–ª–µ–Ω–Ω—è —Å—É–º–∏ –±–æ—Ä–≥—É –Ω–∞ —Ç–µ—Ä–º—ñ–Ω –ø–æ–≥–∞—à–µ–Ω–Ω—è. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ –±–æ—Ä–≥ 12000 –≥—Ä–Ω –Ω–∞ 12 –º—ñ—Å—è—Ü—ñ–≤, —Ç–æ —â–æ–º—ñ—Å—è—á–Ω–∏–π –ø–ª–∞—Ç—ñ–∂ –±—É–¥–µ 1000 –≥—Ä–Ω. –ü–ª–∞—Ç–µ–∂—ñ –º–æ–∂–Ω–∞ –∑–¥—ñ–π—Å–Ω—é–≤–∞—Ç–∏ —á–µ—Ä–µ–∑ –±–∞–Ω–∫, –ø–æ—à—Ç—É –∞–±–æ –æ–Ω–ª–∞–π–Ω.'
    }
    
    if (lowerMessage.includes('—Ç–µ—Ä–º—ñ–Ω') || lowerMessage.includes('—Å—Ä–æ–∫')) {
      return '–¢–µ—Ä–º—ñ–Ω —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó –∑–∞–∑–≤–∏—á–∞–π —Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ñ–¥ 6 –¥–æ 36 –º—ñ—Å—è—Ü—ñ–≤, –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å—É–º–∏ –±–æ—Ä–≥—É —Ç–∞ –≤–∞—à–∏—Ö –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π. –í–∏ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏ —Ç–µ—Ä–º—ñ–Ω, —è–∫–∏–π –≤–∞–º –∑—Ä—É—á–Ω–∏–π, –∞–ª–µ –≤—ñ–Ω –Ω–µ –º–æ–∂–µ –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ 36 –º—ñ—Å—è—Ü—ñ–≤.'
    }
    
    return '–î—è–∫—É—é –∑–∞ –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è! –Ø –ø–µ—Ä–µ–¥–∞–º –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç—É, —è–∫–∏–π –∑–≤\'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º. –¢–∞–∫–æ–∂ –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –Ω–∞–º –∑–∞ –Ω–æ–º–µ—Ä–æ–º +380 44 123 45 67 –∞–±–æ –Ω–∞–ø–∏—Å–∞—Ç–∏ –Ω–∞ email info@mirna-ugoda.ua'
  }

  const handleTopicSelect = (topicId) => {
    setSelectedTopic(topicId)
    const topicMessage = `–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞ –∑ —Ç–µ–º–æ—é: ${topics.find(t => t.id === topicId)?.title}`
    setNewMessage(topicMessage)
  }

  const formatTime = (date) => {
    return date.toLocaleTimeString('uk-UA', { 
      hour: '2-digit', 
      minute: '2-digit' 
    })
  }

  return (
    <div className="min-h-screen py-12">
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-3xl md:text-4xl font-bold text-secondary-900 mb-4">
            –ü—ñ–¥—Ç—Ä–∏–º–∫–∞
          </h1>
          <p className="text-lg text-secondary-600">
            –û—Ç—Ä–∏–º–∞–π—Ç–µ –¥–æ–ø–æ–º–æ–≥—É –≤—ñ–¥ –Ω–∞—à–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç—ñ–≤
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Topics Sidebar */}
          <div className="lg:col-span-1">
            <div className="space-y-6">
              {/* Contact Info */}
              <div className="card">
                <h3 className="text-lg font-semibold text-secondary-900 mb-4 flex items-center">
                  <Phone size={20} className="mr-2 text-primary-600" />
                  –ö–æ–Ω—Ç–∞–∫—Ç–∏
                </h3>
                <div className="space-y-3">
                  <div className="flex items-center space-x-3">
                    <Phone size={16} className="text-secondary-400" />
                    <span className="text-sm">+380 44 123 45 67</span>
                  </div>
                  <div className="flex items-center space-x-3">
                    <Mail size={16} className="text-secondary-400" />
                    <span className="text-sm">info@mirna-ugoda.ua</span>
                  </div>
                  <div className="flex items-center space-x-3">
                    <Clock size={16} className="text-secondary-400" />
                    <span className="text-sm">–ü–Ω-–ü—Ç: 9:00-18:00</span>
                  </div>
                </div>
              </div>

              {/* Topics */}
              <div className="card">
                <h3 className="text-lg font-semibold text-secondary-900 mb-4">
                  –ü–æ–ø—É–ª—è—Ä–Ω—ñ —Ç–µ–º–∏
                </h3>
                <div className="space-y-3">
                  {topics.map((topic) => {
                    const Icon = topic.icon
                    return (
                      <button
                        key={topic.id}
                        onClick={() => handleTopicSelect(topic.id)}
                        className={`w-full text-left p-3 rounded-lg border transition-all duration-200 ${
                          selectedTopic === topic.id
                            ? 'border-primary-300 bg-primary-50'
                            : 'border-secondary-200 hover:border-primary-300 hover:bg-primary-50'
                        }`}
                      >
                        <div className="flex items-center space-x-3">
                          <Icon size={20} className="text-primary-600" />
                          <div>
                            <p className="font-medium text-secondary-900">{topic.title}</p>
                            <p className="text-xs text-secondary-500">{topic.description}</p>
                          </div>
                        </div>
                      </button>
                    )
                  })}
                </div>
              </div>

              {/* FAQ */}
              <div className="card">
                <h3 className="text-lg font-semibold text-secondary-900 mb-4">
                  –ß–∞—Å—Ç—ñ –ø–∏—Ç–∞–Ω–Ω—è
                </h3>
                <div className="space-y-3">
                  <div className="text-sm">
                    <p className="font-medium text-secondary-900 mb-1">
                      –Ø–∫—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–ª—è —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó?
                    </p>
                    <p className="text-secondary-600">
                      –ü–∞—Å–ø–æ—Ä—Ç, –¥–æ–≤—ñ–¥–∫–∞ –ø—Ä–æ –¥–æ—Ö–æ–¥–∏, –¥–æ–∫—É–º–µ–Ω—Ç–∏ –ø—Ä–æ –±–æ—Ä–≥.
                    </p>
                  </div>
                  <div className="text-sm">
                    <p className="font-medium text-secondary-900 mb-1">
                      –°–∫—ñ–ª—å–∫–∏ —á–∞—Å—É —Ä–æ–∑–≥–ª—è–¥–∞—î—Ç—å—Å—è –∑–∞—è–≤–∫–∞?
                    </p>
                    <p className="text-secondary-600">
                      –ó–∞–∑–≤–∏—á–∞–π 3-5 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤.
                    </p>
                  </div>
                  <div className="text-sm">
                    <p className="font-medium text-secondary-900 mb-1">
                      –ß–∏ –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏ —Ç–µ—Ä–º—ñ–Ω –ø–æ–≥–∞—à–µ–Ω–Ω—è?
                    </p>
                    <p className="text-secondary-600">
                      –¢–∞–∫, –º–æ–∂–Ω–∞ –ø–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –∑–∞—è–≤–∫—É –Ω–∞ –∑–º—ñ–Ω—É —É–º–æ–≤.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Chat Area */}
          <div className="lg:col-span-2">
            <div className="card h-[600px] flex flex-col">
              {/* Chat Header */}
              <div className="border-b border-secondary-200 p-4">
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-3">
                    <div className="w-10 h-10 bg-primary-600 rounded-full flex items-center justify-center">
                      <MessageCircle size={20} className="text-white" />
                    </div>
                    <div>
                      <h3 className="font-semibold text-secondary-900">–û–Ω–ª–∞–π–Ω –ø—ñ–¥—Ç—Ä–∏–º–∫–∞</h3>
                      <p className="text-sm text-secondary-500">–í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –ø—Ä–æ—Ç—è–≥–æ–º 2 —Ö–≤–∏–ª–∏–Ω</p>
                    </div>
                  </div>
                  <div className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-success-600 rounded-full"></div>
                    <span className="text-sm text-success-600">–û–Ω–ª–∞–π–Ω</span>
                  </div>
                </div>
              </div>

              {/* Messages */}
              <div className="flex-1 overflow-y-auto p-4 space-y-4">
                {messages.map((message) => (
                  <div
                    key={message.id}
                    className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}
                  >
                    <div className={`flex items-end space-x-2 max-w-xs lg:max-w-md ${
                      message.sender === 'user' ? 'flex-row-reverse space-x-reverse' : ''
                    }`}>
                      <div className="w-8 h-8 rounded-full bg-secondary-200 flex items-center justify-center text-sm">
                        {message.avatar}
                      </div>
                      <div className={`rounded-lg px-4 py-2 ${
                        message.sender === 'user'
                          ? 'bg-primary-600 text-white'
                          : 'bg-secondary-100 text-secondary-900'
                      }`}>
                        <p className="text-sm">{message.text}</p>
                        <p className={`text-xs mt-1 ${
                          message.sender === 'user' ? 'text-primary-100' : 'text-secondary-500'
                        }`}>
                          {formatTime(message.timestamp)}
                        </p>
                      </div>
                    </div>
                  </div>
                ))}
                
                {isTyping && (
                  <div className="flex justify-start">
                    <div className="flex items-end space-x-2">
                      <div className="w-8 h-8 rounded-full bg-secondary-200 flex items-center justify-center text-sm">
                        üë®‚Äçüíº
                      </div>
                      <div className="bg-secondary-100 rounded-lg px-4 py-2">
                        <div className="flex space-x-1">
                          <div className="w-2 h-2 bg-secondary-400 rounded-full animate-bounce"></div>
                          <div className="w-2 h-2 bg-secondary-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                          <div className="w-2 h-2 bg-secondary-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                        </div>
                      </div>
                    </div>
                  </div>
                )}
                
                {/* –£–±—Ä–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–æ–ª–ª */}
              </div>

              {/* Message Input */}
              <div className="border-t border-secondary-200 p-4">
                <div className="flex space-x-3">
                  <input
                    type="text"
                    value={newMessage}
                    onChange={(e) => setNewMessage(e.target.value)}
                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                    placeholder="–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è..."
                    className="input-field flex-1"
                    disabled={isTyping}
                  />
                  <button
                    onClick={handleSendMessage}
                    disabled={!newMessage.trim() || isTyping}
                    className="btn-primary disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    <Send size={20} />
                  </button>
                </div>
                <p className="text-xs text-secondary-500 mt-2">
                  –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default ChatSupport 